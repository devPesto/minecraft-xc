/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

val name = rootProject.name
val targetPaperVersion = "1.20.6-R0.1-SNAPSHOT"
version = "0.0.5"

plugins {
    kotlin("jvm") version "2.0.0"
    id("io.github.goooler.shadow") version "8.1.8"
    id("io.papermc.paperweight.userdev") version "1.7.2"
}

repositories {
    mavenCentral()
    maven { // paper
        url = uri("https://papermc.io/repo/repository/maven-public/")
    }
    maven { // worldguard
        url = uri("https://maven.enginehub.org/repo/")
    }

    maven {
        url = uri("https://repo.dmulloy2.net/repository/public/")
    }
}

//configurations {
//    create("resolvableImplementation") {
//        isCanBeResolved = true
//        isCanBeConsumed = true
//    }

// Special configuration with priority over compileOnly.
// Required so we can include NMS and bukkit as dependency,
// without overriding the paper API (which has slight differences
// in api). See:
// https://github.com/gradle/gradle/issues/10502
// https://stackoverflow.com/questions/31698510/can-i-force-the-order-of-dependencies-in-my-classpath-with-gradle/47953373#47953373
//    create("compileOnlyPriority") {
//        isCanBeResolved = true
//        isCanBeConsumed = true
//        sourceSets["main"].compileClasspath = configurations["compileOnlyPriority"] + sourceSets["main"].compileClasspath
//    }
//}


dependencies {
    // Align versions of all Kotlin components
    implementation(kotlin("stdlib"))

    // Use the Kotlin JDK 8 standard library.
//    compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    // uncomment to shadow into jar
    // configurations["resolvableImplementation"]("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Kotlin reflect api
//    compileOnly("org.jetbrains.kotlin:kotlin-reflect")
    // uncomment to shadow into jar
    // configurations["resolvableImplementation"]("org.jetbrains.kotlin:kotlin-reflect")

    compileOnly("org.tomlj:tomlj:1.1.0")
    compileOnly("com.comphenix.protocol:ProtocolLib:5.1.0")
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.7")
//    compileOnly("io.papermc.paper:paper-api:$targetPaperVersion")
    paperweight.paperDevBundle(targetPaperVersion)


    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
//
//    tasks.named("reobfJar") {
//        base.archivesName = "${name}-${version}-SNAPSHOT"
//    }

}

paperweight.reobfArtifactConfiguration = io.papermc.paperweight.userdev.ReobfArtifactConfiguration.MOJANG_PRODUCTION

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

//tasks.withType<KotlinCompile> {
//    kotlinOptions.freeCompilerArgs = listOf("-Xallow-result-return-type")
//}

tasks {
    build {
        dependsOn(shadowJar)
    }

    test {
        testLogging.showStandardStreams = true
    }
}