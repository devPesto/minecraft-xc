///*
// * This file was generated by the Gradle 'init' task.
// *
// * This generated file contains a sample Kotlin application project to get you started.
// */
//
//import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
//import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
//
//// plugin versioning
//version = "0.0.4"
//
//// base of output jar name
//val OUTPUT_JAR_NAME = "xv"
//
//// target will be set to minecraft version by cli input parameter
//var target = ""
//
//plugins {
//    // Apply the Kotlin JVM plugin to add support for Kotlin.
//    id("org.jetbrains.kotlin.jvm") version "1.6.10"
//    id("com.github.johnrengelman.shadow") version "7.1.2"
//
//    // minecraft papermc paperweight for minecraft nms classes
//    id("io.papermc.paperweight.userdev") version "1.7.1"
//}
//
//repositories {
//    // Use jcenter for resolving dependencies.
//    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
//
//    maven { // paper
//        url = uri("https://papermc.io/repo/repository/maven-public/")
//    }
//    // maven { // protocol lib
//    //     url = uri("https://repo.dmulloy2.net/nexus/repository/public/")
//    // }
//    maven { // packet events v2.0
//        url = uri("https://repo.codemc.io/repository/maven-snapshots/")
//    }
//}
//
//configurations {
//    create("resolvableImplementation") {
//        isCanBeResolved = true
//        isCanBeConsumed = true
//    }
//}
//
//dependencies {
//    // Align versions of all Kotlin components
//    compileOnly(platform("org.jetbrains.kotlin:kotlin-bom"))
//
//    // Use the Kotlin JDK 8 standard library.
//    compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
//    // uncomment to shadow into jar
//    // configurations["resolvableImplementation"]("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
//
//    // Kotlin reflect api
//    compileOnly("org.jetbrains.kotlin:kotlin-reflect")
//    // uncomment to shadow into jar
//    // configurations["resolvableImplementation"]("org.jetbrains.kotlin:kotlin-reflect")
//
//    // google json
//    compileOnly("com.google.code.gson:gson:2.8.0")
//    // uncomment to shadow into jar
//    // configurations["resolvableImplementation"]("com.google.code.gson:gson:2.8.0")
//
//    // toml parsing library
//    compileOnly("org.tomlj:tomlj:1.1.0")
//    // TODO: remove toml shadowing after adding xc dependency for side-loading
//    // configurations["resolvableImplementation"]("org.tomlj:tomlj:1.1.0")
//
//    // OLD: protocol lib (for packets)
//    // deprecated for performance issues
//    // compileOnly("com.comphenix.protocol:ProtocolLib:4.7.0")
//    // compileOnly(files("./lib/ProtocolLib.jar")) // local
//
//    // NEW: trying to use packetevents
//    compileOnly("com.github.retrooper.packetevents:spigot:2.0.0-SNAPSHOT")
//
//    // xc (combat core for hitboxes, projectiles, etc.), local repo
//    implementation(project(":xc"))
//
//    // required so mineman api appears for kotlin vscode plugin
//    // api("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")
//
//    // Use the Kotlin test library.
//    testImplementation("org.jetbrains.kotlin:kotlin-test")
//
//    // Use the Kotlin JUnit integration.
//    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
//
//    if ( project.hasProperty("1.16") === true ) {
//        java.toolchain.languageVersion.set(JavaLanguageVersion.of(16)) // need java==16 for 1.16.5
//        sourceSets["main"].java.srcDir("src/nms/v1_16_R3")
//        paperDevBundle("1.16.5-R0.1-SNAPSHOT")
//        compileOnly("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT")
//        target = "1.16.5"
//    } else if ( project.hasProperty("1.18") === true ) {
//        java.toolchain.languageVersion.set(JavaLanguageVersion.of(17)) // need java==17 for 1.18.2
//        sourceSets["main"].java.srcDir("src/nms/v1_18_R2")
//        paperweight.paperDevBundle("1.18.2-R0.1-SNAPSHOT")
//        compileOnly("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")
//        target = "1.18.2"
//
//        tasks {
//            assemble {
//                // must write it like below because in 1.16 config, reobfJar does not exist
//                // so the simpler definition below wont compile
//                // dependsOn(reobfJar) // won't compile :^(
//                dependsOn(project.tasks.first { it.name.contains("reobfJar") })
//            }
//        }
//
//        tasks.named("reobfJar") {
//            base.archivesBaseName = "${OUTPUT_JAR_NAME}-${target}-SNAPSHOT"
//        }
//    }
//    paperweight.paperDevBundle("1.18.2-R0.1-SNAPSHOT")
//
//}
//
//tasks.withType<KotlinCompile> {
//    kotlinOptions.freeCompilerArgs = listOf("-Xallow-result-return-type")
//}
//
//tasks {
//    named<ShadowJar>("shadowJar") {
//        // verify valid target minecraft version
//        doFirst {
//            val supportedMinecraftVersions = setOf("1.16.5", "1.18.2")
//            if ( !supportedMinecraftVersions.contains(target) ) {
//                throw Exception("Invalid Minecraft version! Supported versions are: 1.16.5, 1.18.2")
//            }
//        }
//
////        classifier = ""
//        configurations = mutableListOf(project.configurations.named("resolvableImplementation").get()) as List<FileCollection>
//        // relocate("com.google", "phonon.xc.shadow.gson") // unneeded
//    }
//}
//
//tasks {
//    build {
//        dependsOn(shadowJar)
//    }
//
//    test {
//        useJUnitPlatform()
//        testLogging.showStandardStreams = true
//    }
//}
//
//gradle.taskGraph.whenReady {
//    tasks {
//        named<ShadowJar>("shadowJar") {
//            if ( hasTask(":release") ) {
//                archiveBaseName = "${OUTPUT_JAR_NAME}-${target}"
//                minimize() // FOR PRODUCTION USE MINIMIZE
//            }
//            else {
//                archiveBaseName = "${OUTPUT_JAR_NAME}-${target}-SNAPSHOT"
//                // minimize() // FOR PRODUCTION USE MINIMIZE
//            }
//        }
//    }
//}